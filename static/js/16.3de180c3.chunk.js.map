{"version":3,"sources":["views/app-views/main/clients/clientsGroups/ClientsGroups.js","components/shared-components/AvatarStatus/index.js","views/app-views/main/clients/clientsList/ClientView.js","views/app-views/main/clients/clientsList/index.js","views/app-views/main/clients/clientsList/ClientProfile.js","views/app-views/main/clients/index.js"],"names":["ClientsGroups","_jsx","children","AvatarStatus","props","name","suffix","subTitle","id","src","onNameClick","className","_jsxs","onClick","ClientView","Component","render","data","visible","close","this","Drawer","width","placement","onClose","closable","email","Divider","dashed","UserOutlined","CalendarOutlined","username","MobileOutlined","phone","MailOutlined","CompassOutlined","address","city","DribbbleOutlined","href","website","ClientsList","constructor","arguments","state","clients","clientProfileVisible","selectedClient","loading","searchMovies","setState","fetch","then","res","json","catch","err","console","error","deleteClient","clientId","filter","item","message","success","content","concat","duration","showClientProfile","clientInfo","closeClientProfile","componentDidMount","tableColumns","title","dataIndex","_","record","sorter","compare","a","b","toLowerCase","length","company","elm","Tooltip","Link","to","FormOutlined","style","fontSize","color","Button","type","icon","EyeOutlined","size","danger","DeleteOutlined","Card","bodyStyle","padding","Table","columns","dataSource","rowKey","ClientProfile","React","avatarEndpoint","match","params","client","getCurrentClient","putClientInfo","nextPath","method","headers","body","JSON","stringify","setTimeout","log","finally","window","location","_client$address","_client$address2","_client$address3","_Fragment","Spin","marginLeft","marginTop","Form","initialValues","phoneNumber","Row","Col","xs","sm","md","lg","gutter","ROW_GUTTER","Item","label","street","zipcode","htmlType","Clients","_ref","Switch","Redirect","exact","from","url","Route","path","component"],"mappings":"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","file":"static/js/16.3de180c3.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst ClientsGroups = () => {\r\n  return <div>Группы клиентов</div>\r\n}\r\n\r\nexport default ClientsGroups\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AvatarStatus = (props) => {\r\n  const { name, suffix, subTitle, id, src, onNameClick } = props\r\n  return (\r\n    <div className='avatar-status d-flex align-items-center'>\r\n      {/*{renderAvatar({icon, src, type, size, shape, gap, text })}*/}\r\n      <div className='ml-2'>\r\n        <div>\r\n          {onNameClick ? (\r\n            <div\r\n              onClick={() => onNameClick({ name, subTitle, src, id })}\r\n              className='avatar-status-name clickable'\r\n            >\r\n              {name}\r\n            </div>\r\n          ) : (\r\n            <div className='avatar-status-name'>Имя: {name}</div>\r\n          )}\r\n          <span>{suffix}</span>\r\n        </div>\r\n        <div className='text-muted avatar-status-subtitle'>\r\n          Почта: {subTitle}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n  name: PropTypes.string,\r\n  src: PropTypes.string,\r\n  type: PropTypes.string,\r\n  onNameClick: PropTypes.func\r\n}\r\n\r\nexport default AvatarStatus\r\n","import React, { Component } from 'react'\r\nimport { Drawer, Divider } from 'antd'\r\nimport {\r\n  MobileOutlined,\r\n  MailOutlined,\r\n  UserOutlined,\r\n  CompassOutlined,\r\n  CalendarOutlined,\r\n  DribbbleOutlined\r\n} from '@ant-design/icons'\r\n\r\nexport class ClientView extends Component {\r\n  render() {\r\n    const { data, visible, close } = this.props\r\n    return (\r\n      <Drawer\r\n        width={300}\r\n        placement='right'\r\n        onClose={close}\r\n        closable={true}\r\n        visible={visible}\r\n      >\r\n        <div className='text-center mt-3'>\r\n          <h3 className='mt-2 mb-0'>{data?.name}</h3>\r\n          <span className='text-muted'>{data?.email}</span>\r\n        </div>\r\n        <Divider dashed />\r\n        <div className=''>\r\n          <h6 className='text-muted text-uppercase mb-3'>Account details</h6>\r\n          <p>\r\n            <UserOutlined />\r\n            <span className='ml-3 text-dark'>id: {data?.id}</span>\r\n          </p>\r\n          <p>\r\n            <CalendarOutlined />\r\n            <span className='ml-3 text-dark'>userName: {data?.username}</span>\r\n          </p>\r\n        </div>\r\n        <div className='mt-5'>\r\n          <h6 className='text-muted text-uppercase mb-3'>CONTACT</h6>\r\n          <p>\r\n            <MobileOutlined />\r\n            <span className='ml-3 text-dark'>{data?.phone}</span>\r\n          </p>\r\n          <p>\r\n            <MailOutlined />\r\n            <span className='ml-3 text-dark'>\r\n              {data?.email ? data?.email : '-'}\r\n            </span>\r\n          </p>\r\n          <p>\r\n            <CompassOutlined />\r\n            <span className='ml-3 text-dark'>{data?.address.city}</span>\r\n          </p>\r\n        </div>\r\n        <div className='mt-5'>\r\n          <h6 className='text-muted text-uppercase mb-3'>Social profiles</h6>\r\n          <p>\r\n            <DribbbleOutlined />\r\n            <a href='/#' className='ml-3 text-dark'>\r\n              {data?.website}\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </Drawer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ClientView\r\n","import React, { Component } from 'react'\r\nimport { Card, Table, Tooltip, message, Button } from 'antd'\r\nimport { EyeOutlined, DeleteOutlined, FormOutlined } from '@ant-design/icons'\r\nimport AvatarStatus from 'components/shared-components/AvatarStatus'\r\nimport ClientView from './ClientView'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport class ClientsList extends Component {\r\n  state = {\r\n    clients: [],\r\n    clientProfileVisible: false,\r\n    selectedClient: null,\r\n    loading: true\r\n  }\r\n\r\n  searchMovies = () => {\r\n    this.setState({ loading: true })\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        this.setState({ clients: data, loading: false })\r\n      })\r\n      .catch((err) => {\r\n        console.error(err)\r\n        this.setState({ loading: false })\r\n      })\r\n  }\r\n  deleteClient = (clientId) => {\r\n    this.setState({\r\n      clients: this.state.clients.filter((item) => item.id !== clientId)\r\n    })\r\n    message.success({ content: `Deleted client ${clientId}`, duration: 2 })\r\n  }\r\n\r\n  showClientProfile = (clientInfo) => {\r\n    this.setState({\r\n      clientProfileVisible: true,\r\n      selectedClient: clientInfo\r\n    })\r\n  }\r\n\r\n  closeClientProfile = () => {\r\n    this.setState({\r\n      clientProfileVisible: false,\r\n      selectedClient: null\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.searchMovies()\r\n  }\r\n\r\n  render() {\r\n    const { clients, clientProfileVisible, selectedClient } = this.state\r\n\r\n    const tableColumns = [\r\n      {\r\n        title: 'Клиенты',\r\n        dataIndex: 'name',\r\n        render: (_, record) => (\r\n          <div className='d-flex'>\r\n            <AvatarStatus name={record.name} subTitle={record.email} />\r\n          </div>\r\n        ),\r\n        sorter: {\r\n          compare: (a, b) => {\r\n            a = a.name.toLowerCase()\r\n            b = b.name.toLowerCase()\r\n            return a > b ? -1 : b > a ? 1 : 0\r\n          }\r\n        }\r\n      },\r\n      {\r\n        title: 'Адрес',\r\n        dataIndex: 'address',\r\n        sorter: {\r\n          compare: (a, b) => a.address.length - b.address.length\r\n        },\r\n        render: (_, record) => (\r\n          <div className='d-flex'>{record.address.city}</div>\r\n        )\r\n      },\r\n      {\r\n        title: 'Место работы',\r\n        dataIndex: 'company',\r\n        render: (_, record) => (\r\n          <div className='d-flex'>{record.company.name}</div>\r\n        ),\r\n        sorter: {\r\n          compare: (a, b) => a.company.length - b.company.length\r\n        }\r\n      },\r\n      {\r\n        title: 'Actions',\r\n        dataIndex: 'actions',\r\n        render: (_, elm) => (\r\n          <div>\r\n            <Tooltip title='Link to'>\r\n              <Link to={`/app/main/clients/${elm.id}`}>\r\n                <FormOutlined\r\n                  className='mr-3'\r\n                  style={{ fontSize: '24px', color: '#389e0d' }}\r\n                />\r\n              </Link>\r\n            </Tooltip>\r\n            <Tooltip title='View'>\r\n              <Button\r\n                type='primary'\r\n                className='mr-2'\r\n                icon={<EyeOutlined />}\r\n                onClick={() => {\r\n                  this.showClientProfile(elm)\r\n                }}\r\n                size='small'\r\n              />\r\n            </Tooltip>\r\n            <Tooltip title='Delete'>\r\n              <Button\r\n                danger\r\n                icon={<DeleteOutlined />}\r\n                onClick={() => {\r\n                  this.deleteClient(elm.id)\r\n                }}\r\n                size='small'\r\n              />\r\n            </Tooltip>\r\n          </div>\r\n        )\r\n      }\r\n    ]\r\n    return (\r\n      <Card bodyStyle={{ padding: '0px' }}>\r\n        <Table columns={tableColumns} dataSource={clients} rowKey='id' />\r\n        <ClientView\r\n          data={selectedClient}\r\n          visible={clientProfileVisible}\r\n          close={() => {\r\n            this.closeClientProfile()\r\n          }}\r\n        />\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ClientsList\r\n","import React from 'react'\r\nimport { Form, Button, Row, Col, Spin } from 'antd'\r\nimport { ROW_GUTTER } from 'constants/ThemeConstant'\r\n\r\nexport class ClientProfile extends React.Component {\r\n  avatarEndpoint = 'https://www.mocky.io/v2/5cc8019d300000980a055e76'\r\n\r\n  state = {\r\n    id: this.props.match.params.clientId,\r\n    client: {},\r\n    loading: true\r\n  }\r\n\r\n  getCurrentClient = () => {\r\n    this.setState({ loading: true })\r\n    fetch(`https://jsonplaceholder.typicode.com/users/${this.state.id}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        this.setState({ client: data, loading: false })\r\n      })\r\n      .catch((err) => {\r\n        console.error(err)\r\n        this.setState({ loading: false })\r\n      })\r\n  }\r\n\r\n  putClientInfo = (nextPath) => {\r\n    const data = this.state.client\r\n    this.setState({ loading: true })\r\n    fetch('https://fakerapi.it/api/v1/persons?_locale=fr_FR', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(data)\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setTimeout(() => {\r\n          console.log(data)\r\n          this.setState({ loading: false })\r\n        }, 1000)\r\n      })\r\n      .catch((err) => {\r\n        setTimeout(() => {\r\n          console.error(err)\r\n          this.setState({ loading: false })\r\n        }, 1000)\r\n      })\r\n      .finally(() => {\r\n        if (nextPath) {\r\n          window.location.href = nextPath // как вариант можно еще через hoc реализовать\r\n        }\r\n      })\r\n  }\r\n  componentDidMount() {\r\n    this.getCurrentClient()\r\n  }\r\n  render() {\r\n    const { client, loading } = this.state\r\n    return (\r\n      <>\r\n        {loading ? (\r\n          <Spin\r\n            size='large'\r\n            className='mt-4 center'\r\n            style={{ marginLeft: '50%', marginTop: '50%' }}\r\n          />\r\n        ) : (\r\n          <div className='mt-4'>\r\n            <Form\r\n              name='basicInformation'\r\n              initialValues={{\r\n                name: client.name,\r\n                email: client.email,\r\n                username: client.username,\r\n                phoneNumber: client.phone,\r\n                website: client.website\r\n              }}\r\n            >\r\n              <Row>\r\n                <Col xs={24} sm={24} md={24} lg={16}>\r\n                  <Row gutter={ROW_GUTTER}>\r\n                    <Col xs={24} sm={24} md={12}>\r\n                      <Form.Item label='Name:' name='name'>\r\n                        {client.name}\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} sm={24} md={12}>\r\n                      <Form.Item label='Username' name='username'>\r\n                        {client.username}\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} sm={24} md={12}>\r\n                      <Form.Item label='Email' name='email'>\r\n                        {client.email}\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} sm={24} md={12}>\r\n                      <Form.Item label='Phone Number' name='phoneNumber'>\r\n                        {client.phone}\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} sm={24} md={12}>\r\n                      <Form.Item label='Website' name='website'>\r\n                        {client.website}\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} sm={24} md={24}>\r\n                      <Form.Item label='Street' name='street'>\r\n                        {client?.address?.street}\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} sm={24} md={12}>\r\n                      <Form.Item label='City' name='city'>\r\n                        {client?.address?.city}\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} sm={24} md={12}>\r\n                      <Form.Item label='Zip code' name='zipcode'>\r\n                        {client?.address?.zipcode}\r\n                      </Form.Item>\r\n                    </Col>\r\n                  </Row>\r\n                  <Button\r\n                    type='primary'\r\n                    htmlType='submit'\r\n                    onClick={() => {\r\n                      this.putClientInfo('/hammerFirst/#/hammerFirst/app/main/clients/clientsList')\r\n                    }}\r\n                  >\r\n                    Save Change\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </div>\r\n        )}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ClientProfile\r\n","import React from 'react'\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\nimport ClientsGroups from './clientsGroups/ClientsGroups'\r\nimport ClientsList from './clientsList'\r\nimport ClientProfile from './clientsList/ClientProfile'\r\n\r\nconst Clients = ({ match }) => {\r\n  return (\r\n    <Switch>\r\n      <Redirect exact from={`${match.url}`} to={`${match.url}/clientsList`} />\r\n      <Route path={`${match.url}/clientsList`} component={ClientsList} />\r\n      <Route path={`${match.url}/:clientId`} component={ClientProfile} />\r\n      <Route path={`${match.url}/clientsGroups`} component={ClientsGroups} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default Clients\r\n"],"sourceRoot":""}